{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n  }\n  getClients() {\n    return this.http.get(this.baseUrl + \"/api/clients?populate=*\");\n  }\n  getBlogs() {\n    return this.http.get(this.baseUrl + \"/api/blogs?populate=*\");\n  }\n  getSingleBlog(id) {\n    return this.http.get(this.baseUrl + `/api/blogs/${id}?populate=*`);\n  }\n  getTeams() {\n    return this.http.get(this.baseUrl + \"/api/teams?populate=*\");\n  }\n  getProjects() {\n    return this.http.get(this.baseUrl + \"/api/projects?populate=*\");\n  }\n  getTotalCounts() {\n    return this.http.get(this.baseUrl + \"/api/total-counts?populate=*\");\n  }\n  getServices() {\n    return this.http.get(this.baseUrl + \"/api/Services?populate=*\");\n  }\n  getQuestions() {\n    return this.http.get(this.baseUrl + \"/api/questions?populate=*\");\n  }\n  getAboutUs() {\n    return this.http.get(this.baseUrl + \"/api/about-uses?populate=*\");\n  }\n  getWorks() {\n    return this.http.get(this.baseUrl + \"/api/works?populate=*\");\n  }\n  createComment(commentPost) {\n    return this.http.post(this.baseUrl + \"/api/comments\", commentPost);\n  }\n  static #_ = this.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","HomeService","constructor","http","baseUrl","getClients","get","getBlogs","getSingleBlog","id","getTeams","getProjects","getTotalCounts","getServices","getQuestions","getAboutUs","getWorks","createComment","commentPost","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Naol\\Desktop\\Daf-Website\\DAF-Tech_Social_Website\\DAF-CLIENT\\src\\app\\services\\home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  baseUrl: string = environment.baseUrl;\r\n\r\n  getClients() {\r\n    return this.http.get<any>(this.baseUrl + \"/api/clients?populate=*\")\r\n  }\r\n\r\n  getBlogs() {\r\n    return this.http.get<any>(this.baseUrl + \"/api/blogs?populate=*\")\r\n  }\r\n  getSingleBlog(id:string){\r\n    return this.http.get<any>(this.baseUrl+`/api/blogs/${id}?populate=*`)\r\n  }\r\n  \r\n  getTeams(){\r\n    return this.http.get<any>(this.baseUrl + \"/api/teams?populate=*\")\r\n  }\r\n\r\n  getProjects(){\r\n    return this.http.get<any>(this.baseUrl+ \"/api/projects?populate=*\")\r\n  }\r\n  getTotalCounts (){\r\n    return this.http.get<any>(this.baseUrl + \"/api/total-counts?populate=*\")\r\n  }\r\n  getServices (){\r\n    return this.http.get<any>(this.baseUrl+ \"/api/Services?populate=*\")\r\n  }\r\n  getQuestions(){\r\n    return this.http.get<any> (this.baseUrl + \"/api/questions?populate=*\")\r\n  }\r\n\r\n  getAboutUs() {\r\n    return \tthis.http.get<any>(this.baseUrl + \"/api/about-uses?populate=*\")\r\n  }\r\n\r\n  getWorks(){\r\n    return   this.http.get<any>(this.baseUrl+ \"/api/works?populate=*\" )\r\n  }\r\n\r\n  createComment (commentPost:any){\r\n\r\n    return this.http.post<any>(this.baseUrl+\"/api/comments\",commentPost)\r\n  }\r\n}"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAGxB,KAAAC,OAAO,GAAWJ,WAAW,CAACI,OAAO;EAHG;EAKxCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAG,yBAAyB,CAAC;EACrE;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAG,uBAAuB,CAAC;EACnE;EACAI,aAAaA,CAACC,EAAS;IACrB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAC,cAAcK,EAAE,aAAa,CAAC;EACvE;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAG,uBAAuB,CAAC;EACnE;EAEAO,WAAWA,CAAA;IACT,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAE,0BAA0B,CAAC;EACrE;EACAQ,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAG,8BAA8B,CAAC;EAC1E;EACAS,WAAWA,CAAA;IACT,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAE,0BAA0B,CAAC;EACrE;EACAU,YAAYA,CAAA;IACV,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAO,IAAI,CAACF,OAAO,GAAG,2BAA2B,CAAC;EACxE;EAEAW,UAAUA,CAAA;IACR,OAAQ,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAG,4BAA4B,CAAC;EACzE;EAEAY,QAAQA,CAAA;IACN,OAAS,IAAI,CAACb,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,OAAO,GAAE,uBAAuB,CAAE;EACrE;EAEAa,aAAaA,CAAEC,WAAe;IAE5B,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAM,IAAI,CAACf,OAAO,GAAC,eAAe,EAACc,WAAW,CAAC;EACtE;EAAC,QAAAE,CAAA,G;qBA9CUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}